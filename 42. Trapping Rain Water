class Solution:
    def trap(self, height: List[int]) -> int:
        l = len(height)
        left = [0]*l
        right = [0]*l
        left[0] = height[0]
        right[l-1] = height[l-1]
        for i in range(1,l):
            left[i] = max(left[i-1],height[i])
            right[l-1-i] = max(right[l-i],height[l-1-i])
        
      
        water =0
        
        for i in range(l):
             water = water + min(left[i],right[i])-height[i]
            
        return water
        
Approach 2 
class Solution:
    def trap(self, height: List[int]) -> int:
        left=0
        right=len(height)-1
        leftMax=height[left]
        rightMax=height[right]
        result=0
        
        while left<right:
            if leftMax<rightMax:
                left+=1
                leftMax=max(leftMax,height[left])
                result+=leftMax-height[left]
            else:
                right-=1
                rightMax=max(rightMax,height[right])
                result+=rightMax-height[right]
                
        return result
